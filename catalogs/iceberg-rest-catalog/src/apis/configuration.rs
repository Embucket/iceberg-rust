/*
 * Apache Iceberg REST Catalog API
 *
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * Generated by: https://openapi-generator.tech
 */

use derive_builder::Builder;

#[derive(Debug, Clone, Builder)]
pub struct Configuration {
    pub base_path: String,
    #[builder(setter(into, strip_option), default)]
    pub user_agent: Option<String>,
    #[builder(default = "reqwest::Client::new()")]
    pub client: reqwest::Client,
    #[builder(setter(into, strip_option), default)]
    pub basic_auth: Option<BasicAuth>,
    #[builder(setter(into, strip_option), default)]
    pub oauth_access_token: Option<String>,
    #[builder(setter(into, strip_option), default)]
    pub bearer_access_token: Option<String>,
    #[builder(setter(into, strip_option), default)]
    pub api_key: Option<ApiKey>,
    // TODO: take an oauth2 token source, similar to the go one
}

pub type BasicAuth = (String, Option<String>);

#[derive(Debug, Clone)]
pub struct ApiKey {
    pub prefix: Option<String>,
    pub key: String,
}

impl Configuration {
    pub fn new() -> Configuration {
        Configuration::default()
    }
    pub fn builder() -> ConfigurationBuilder {
        ConfigurationBuilder::default()
    }
}

impl Default for Configuration {
    fn default() -> Self {
        Configuration {
            base_path: "https://localhost".to_owned(),
            user_agent: Some("OpenAPI-Generator/0.0.1/rust".to_owned()),
            client: reqwest::Client::new(),
            basic_auth: None,
            oauth_access_token: None,
            bearer_access_token: None,
            api_key: None,
        }
    }
}
